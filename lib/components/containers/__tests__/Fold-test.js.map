{"version":3,"sources":["../../../../src/components/containers/__tests__/Fold-test.js"],"names":["TraceFold","PlotlyFold","describe","it","withoutDelete","fixtures","scatter","find","expect","exists","toBe","withDelete","beforeDeleteTrace","jest","fn","simulate","payload","mock","calls","toEqual","axesToBeGarbageCollected","subplotToBeGarbageCollected","traceIndexes"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,GAAG,6BAAmBC,YAAnB,CAAlB;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,0FAAD,EAA6F,YAAM;AACnG,QAAMC,aAAa,GAAG,oCACpB,qBAAC,qBAAD,kCAAgBC,oBAASC,OAAT,EAAhB;AAAA,6BACE,qBAAC,aAAD;AAAA,+BACE,qBAAC,YAAD;AAAA,iCACE,qBAAC,eAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AADF;AADF;AADF,OADoB,EAQpBC,IARoB,CAQf,kBARe,CAAtB;AASAC,IAAAA,MAAM,CAACJ,aAAa,CAACK,MAAd,EAAD,CAAN,CAA+BC,IAA/B,CAAoC,KAApC;AAEA,QAAMC,UAAU,GAAG,oCACjB,qBAAC,qBAAD,kCAAgBN,oBAASC,OAAT,EAAhB;AAAA,6BACE,qBAAC,aAAD;AAAA,+BACE,qBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,CAAC,CAAD,CAAzB;AAA8B,UAAA,SAAS,EAAE,IAAzC;AAAA,iCACE,qBAAC,eAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AADF;AADF;AADF,OADiB,EAQjBC,IARiB,CAQZ,kBARY,CAAnB;AASAC,IAAAA,MAAM,CAACG,UAAU,CAACF,MAAX,EAAD,CAAN,CAA4BC,IAA5B,CAAiC,IAAjC;AACD,GAtBC,CAAF;AAwBAP,EAAAA,EAAE,CAAC,mEAAD,EAAsE,YAAM;AAC5E,QAAMS,iBAAiB,GAAGC,IAAI,CAACC,EAAL,EAA1B;AACA,wCACE,qBAAC,qBAAD,kCAAgBT,oBAASC,OAAT,EAAhB;AAAoC,MAAA,iBAAiB,EAAEM,iBAAvD;AAAA,6BACE,qBAAC,aAAD;AAAA,+BACE,qBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,CAAC,CAAD,CAAzB;AAA8B,UAAA,SAAS,EAAE,IAAzC;AAAA,iCACE,qBAAC,eAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AADF;AADF;AADF,OADF,EASGL,IATH,CASQ,kBATR,EAUGQ,QAVH,CAUY,OAVZ;AAYA,QAAMC,OAAO,GAAGJ,iBAAiB,CAACK,IAAlB,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAAhB;AACAV,IAAAA,MAAM,CAACQ,OAAD,CAAN,CAAgBG,OAAhB,CAAwB;AACtBC,MAAAA,wBAAwB,EAAE,EADJ;AAEtBC,MAAAA,2BAA2B,EAAE,IAFP;AAGtBC,MAAAA,YAAY,EAAE,CAAC,CAAD;AAHQ,KAAxB;AAKD,GApBC,CAAF;AAqBD,CA9CO,CAAR","sourcesContent":["import {Numeric} from '../../fields';\nimport {PlotlyFold, PlotlyPanel} from '..';\nimport {TestEditor, fixtures, mount} from 'lib/test-utils';\nimport {connectTraceToPlot} from 'lib';\n\nconst TraceFold = connectTraceToPlot(PlotlyFold);\n\ndescribe('<PlotlyFold>', () => {\n  it('shows deleteContainer button when deleteContainer function present and canDelete is true', () => {\n    const withoutDelete = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <PlotlyPanel>\n          <PlotlyFold>\n            <Numeric attr=\"opacity\" />\n          </PlotlyFold>\n        </PlotlyPanel>\n      </TestEditor>\n    ).find('.js-fold__delete');\n    expect(withoutDelete.exists()).toBe(false);\n\n    const withDelete = mount(\n      <TestEditor {...fixtures.scatter()}>\n        <PlotlyPanel>\n          <TraceFold traceIndexes={[0]} canDelete={true}>\n            <Numeric attr=\"opacity\" />\n          </TraceFold>\n        </PlotlyPanel>\n      </TestEditor>\n    ).find('.js-fold__delete');\n    expect(withDelete.exists()).toBe(true);\n  });\n\n  it('calls deleteContainer when function present and canDelete is true', () => {\n    const beforeDeleteTrace = jest.fn();\n    mount(\n      <TestEditor {...fixtures.scatter()} beforeDeleteTrace={beforeDeleteTrace}>\n        <PlotlyPanel>\n          <TraceFold traceIndexes={[0]} canDelete={true}>\n            <Numeric attr=\"opacity\" />\n          </TraceFold>\n        </PlotlyPanel>\n      </TestEditor>\n    )\n      .find('.js-fold__delete')\n      .simulate('click');\n\n    const payload = beforeDeleteTrace.mock.calls[0][0];\n    expect(payload).toEqual({\n      axesToBeGarbageCollected: [],\n      subplotToBeGarbageCollected: null,\n      traceIndexes: [0],\n    });\n  });\n});\n"],"file":"Fold-test.js"}