{"version":3,"sources":["../../../src/components/widgets/ColorscalePicker.js"],"names":["colorscalepickerContainerWidth","Scale","props","state","selectedColorscaleType","initialCategory","showColorscalePicker","onChange","bind","onClick","setState","onColorscaleChange","selected","disableCategorySwitch","description","COLOR_PICKER_CONSTANTS","COLORSCALE_DESCRIPTIONS","colorscaleOptions","COLORSCALE_TYPES","filter","type","map","label","value","_","context","localize","onColorscaleTypeChange","Component","propTypes","PropTypes","func","array","string","bool","contextTypes"],"mappings":"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","sourcesContent":["import ColorscalePicker, {Colorscale, COLOR_PICKER_CONSTANTS} from 'react-colorscales';\nimport Dropdown from './Dropdown';\nimport Info from '../fields/Info';\nimport PropTypes from 'prop-types';\nimport {Component} from 'react';\n// CAREFUL: needs to be the same value as $colorscalepicker-width in _colorscalepicker.scss\nconst colorscalepickerContainerWidth = 240;\n\nclass Scale extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedColorscaleType: props.initialCategory || 'sequential',\n      showColorscalePicker: false,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      showColorscalePicker: !this.state.showColorscalePicker,\n    });\n  }\n\n  onChange(selectedColorscaleType) {\n    this.setState({selectedColorscaleType});\n  }\n\n  render() {\n    const {onColorscaleChange, selected, disableCategorySwitch} = this.props;\n    const {selectedColorscaleType, showColorscalePicker} = this.state;\n    const description = COLOR_PICKER_CONSTANTS.COLORSCALE_DESCRIPTIONS[selectedColorscaleType];\n    const colorscaleOptions = COLOR_PICKER_CONSTANTS.COLORSCALE_TYPES.filter(\n      (type) => type !== 'custom'\n    ).map((type) => ({\n      label: type + ' scales',\n      value: type,\n    }));\n    const _ = this.context.localize;\n\n    return (\n      <div className=\"customPickerContainer\">\n        <div className=\"customPickerContainer__clickable\">\n          <Colorscale colorscale={selected} onClick={this.onClick} />\n        </div>\n        {showColorscalePicker ? (\n          <div className=\"customPickerContainer__expanded-content\">\n            {disableCategorySwitch ? null : (\n              <Dropdown\n                options={colorscaleOptions}\n                value={selectedColorscaleType}\n                onChange={this.onChange}\n                clearable={false}\n                searchable={false}\n                placeholder={_('Select a Colorscale Type')}\n                className=\"customPickerContainer__category-dropdown\"\n              />\n            )}\n            {description ? (\n              <div className=\"customPickerContainer__palettes\">\n                <ColorscalePicker\n                  onChange={onColorscaleChange}\n                  colorscale={selected}\n                  width={colorscalepickerContainerWidth}\n                  colorscaleType={this.state.selectedColorscaleType}\n                  onColorscaleTypeChange={this.onColorscaleTypeChange}\n                  disableSwatchControls\n                  scaleLength={7}\n                />\n                <Info className=\"customPickerContainer__info\">{description}</Info>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nScale.propTypes = {\n  onColorscaleChange: PropTypes.func,\n  selected: PropTypes.array,\n  label: PropTypes.string,\n  initialCategory: PropTypes.string,\n  disableCategorySwitch: PropTypes.bool,\n};\n\nScale.contextTypes = {\n  localize: PropTypes.func,\n};\n\nexport default Scale;\n"],"file":"ColorscalePicker.js"}