{"version":3,"sources":["../../src/components/PanelMenuWrapper.js"],"names":["PanelsWithSidebar","props","opts","computeMenuOptions","firstSidebarGroup","filter","o","panels","state","group","name","panel","setPanel","bind","renderSection","setState","section","i","type","plotly_editor_traits","sidebar_element","key","children","menuPanelOrder","sections","groupLookup","groupIndex","childrenArray","Children","toArray","forEach","child","obj","hasOwnProperty","length","push","menuOpts","map","Component","propTypes","PropTypes","node","array","childContextTypes","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {Children, cloneElement, Component} from 'react';\nimport SidebarGroup from './sidebar/SidebarGroup';\nimport {bem} from '../lib';\nimport sortMenu from '../lib/sortMenu';\n\nclass PanelsWithSidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    const opts = this.computeMenuOptions(props);\n    const firstSidebarGroup = opts.filter((o) => o.panels)[0];\n\n    this.state = {\n      group: firstSidebarGroup.name,\n      panel: firstSidebarGroup.panels[0],\n    };\n\n    this.setPanel = this.setPanel.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setPanel(group, panel) {\n    this.setState({group, panel});\n  }\n\n  getChildContext() {\n    return {\n      setPanel: this.setPanel,\n    };\n  }\n\n  renderSection(section, i) {\n    if (section.type && (section.type.plotly_editor_traits || {}).sidebar_element) {\n      return cloneElement(section, {key: i});\n    }\n    return (\n      <SidebarGroup\n        key={i}\n        selectedGroup={this.state.group}\n        selectedPanel={this.state.panel}\n        group={section.name}\n        panels={section.panels}\n        onChangeGroup={this.setPanel}\n      />\n    );\n  }\n\n  computeMenuOptions(props) {\n    const {children, menuPanelOrder} = props;\n    const sections = [];\n    const groupLookup = {};\n    let groupIndex;\n    const childrenArray = sortMenu(Children.toArray(children), menuPanelOrder);\n\n    childrenArray.forEach((child) => {\n      if (!child) {\n        return;\n      }\n      const group = child.props.group;\n      const name = child.props.name;\n\n      if (group && name) {\n        let obj;\n        if (groupLookup.hasOwnProperty(group)) {\n          groupIndex = groupLookup[group];\n          obj = sections[groupIndex];\n        } else {\n          groupLookup[group] = sections.length;\n          obj = {name: group, panels: []};\n          sections.push(obj);\n        }\n        obj.panels.push(name);\n      }\n\n      if ((child.type.plotly_editor_traits || {}).sidebar_element) {\n        sections.push(child);\n      }\n    });\n\n    return sections;\n  }\n\n  render() {\n    const menuOpts = this.computeMenuOptions(this.props);\n\n    return (\n      <div className={bem('editor_controls', 'wrapper')}>\n        <div className={bem('sidebar')}>{menuOpts.map(this.renderSection)}</div>\n        {Children.map(this.props.children, (child, i) =>\n          child === null ||\n          this.state.group !== child.props.group ||\n          this.state.panel !== child.props.name\n            ? null\n            : cloneElement(child, {key: i})\n        )}\n      </div>\n    );\n  }\n}\n\nPanelsWithSidebar.propTypes = {\n  children: PropTypes.node,\n  menuPanelOrder: PropTypes.array,\n};\n\nPanelsWithSidebar.childContextTypes = {\n  setPanel: PropTypes.func,\n};\n\nexport default PanelsWithSidebar;\n"],"file":"PanelMenuWrapper.js"}